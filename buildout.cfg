[buildout]
prefer-final = false
newest = false
download-cache = .cache
develop = .
parts = 

[project]
name = infi.os_info
homepage = https://github.com/Infinidat/${project:name}
company = Infinidat
namespace_packages = ['infi']
install_requires = [
	'distro',
	'infi.gitpy>=1.0.4',
	'setuptools',
	'infi.unittest'
	]
version_file = src/infi/os_info/__version__.py
description = module for getting os information
long_description = module for getting os information
console_scripts = [
	'infi-git-short-version = infi.os_info.scripts:git_short_version',
	'infi-git-version = infi.os_info.scripts:git_version',
	'infi-uname = infi.os_info.scripts:uname'
	]
gui_scripts = []
package_data = []
upgrade_code = {ccc1137a-6348-11e4-be9a-84383565d680}
product_name = infi.os_info
post_install_script_name = None
pre_uninstall_script_name = None

[isolated-python]
recipe = infi.recipe.python
version = v3.8.12

[setup.py]
recipe = infi.recipe.template.version
input = setup.in
output = setup.py

[__version__.py]
recipe = infi.recipe.template.version
output = ${project:version_file}

[development-scripts]
dependent-scripts = true
recipe = infi.recipe.console_scripts
eggs = infi.traceback
	${project:name}
	pylint
	zc.buildout
	nose
	coverage
	ipython
	mock
interpreter = python

[pack]
recipe = infi.recipe.application_packager

[sublime]
recipe = corneti.recipes.codeintel
eggs = ${development-scripts:eggs}

